datfilename=J9TraceFormat.dat
executable=avl
avl.0 2 1 3 N Trc_AVL_findRightMostLeaf_Entry " >findRightMostLeaf(tree=%p, walkSRPPtr=%p, heightChange=%p)"
avl.1 4 1 3 N Trc_AVL_findRightMostLeaf_NotFound " <findRightMostLeaf -- walk is NULL"
avl.2 4 1 3 N Trc_AVL_findRightMostLeaf_Exit " <findRightMostLeaf -- found %p"
avl.3 2 1 3 N Trc_AVL_rotate_Entry " >rotate(tree=%p, walk=%p, direction=%zi, heightChange=%p)"
avl.4 4 1 3 N Trc_AVL_rotate_Exit " <rotate -- heavyNode=%p"
avl.5 2 1 3 N Trc_AVL_doubleRotate_Entry " >doubleRotate(tree=%p, walk=%p, direction=%zi, heightChange=%p)"
avl.6 4 1 3 N Trc_AVL_doubleRotate_Exit " <doubleRotate -- newRootNode=%p"
avl.7 2 1 3 N Trc_AVL_rebalance_Entry " >rebalance(tree=%p, walkPtr=%p, walkSRPPtr=%p, direction=%zi, heightChange=%p)"
avl.8 4 1 3 N Trc_AVL_rebalance_Exit " <rebalance - heightChange=%zi"
avl.9 2 1 3 N Trc_AVL_insertNode_Entry " >insertNode(tree=%p, walkPtr=%p, walkSRPPtr=%p, node=%p, heightChange=%p)"
avl.10 4 1 3 N Trc_AVL_insertNode_Trivial " <insertNode -- inserted trivially: %p"
avl.11 4 1 3 N Trc_AVL_insertNode_Exists " <insertNode -- node already exists: %p"
avl.12 4 1 3 N Trc_AVL_insertNode_Recursive " <insertNode -- inserted recursively: %p"
avl.13 2 1 3 N Trc_AVL_findNode_Entry " >findNode(tree=%p, walk=%p, search=%zu)"
avl.14 4 1 3 N Trc_AVL_findNode_Exit " <findNode -- result=%p"
avl.15 2 1 3 N Trc_AVL_deleteNode_Entry " >deleteNode(tree=%p, walkPtr=%p, walkSRPPtr=%p, node=%p, heightChange=%p)"
avl.16 4 1 3 N Trc_AVL_deleteNode_NotInTree " <deleteNode -- node is not in this tree"
avl.17 4 1 3 N Trc_AVL_deleteNode_Removed " <deleteNode -- node removed: %p"
avl.18 4 1 3 N Trc_AVL_deleteNode_Recursive " <deleteNode -- deleted recursively: %p"
avl.19 12 1 1 N Assert_AVL_true "* ** ASSERTION FAILED ** at %s:%d: %s"
avl.20 12 1 1 N Assert_AVL_false "* ** ASSERTION FAILED ** at %s:%d: %s"
