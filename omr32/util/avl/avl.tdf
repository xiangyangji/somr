// (c) Copyright IBM Corp. 1998, 2013
//
//  This program and the accompanying materials are made available
//  under the terms of the Eclipse Public License v1.0 and
//  Apache License v2.0 which accompanies this distribution.
//
//      The Eclipse Public License is available at
//      http://www.eclipse.org/legal/epl-v10.html
//
//      The Apache License v2.0 is available at
//      http://www.opensource.org/licenses/apache2.0.php
//
// Contributors:
//    Multiple authors (IBM Corp.) - initial implementation and documentation

Executable=avl
DATFileName=J9TraceFormat.dat

TraceEntry=Trc_AVL_findRightMostLeaf_Entry Noenv Overhead=1 Level=3 Template="findRightMostLeaf(tree=%p, walkSRPPtr=%p, heightChange=%p)"
TraceExit=Trc_AVL_findRightMostLeaf_NotFound Noenv Overhead=1 Level=3 Template="findRightMostLeaf -- walk is NULL"
TraceExit=Trc_AVL_findRightMostLeaf_Exit Noenv Overhead=1 Level=3 Template="findRightMostLeaf -- found %p"

TraceEntry=Trc_AVL_rotate_Entry Noenv Overhead=1 Level=3 Template="rotate(tree=%p, walk=%p, direction=%zi, heightChange=%p)"
TraceExit=Trc_AVL_rotate_Exit Noenv Overhead=1 Level=3 Template="rotate -- heavyNode=%p"

TraceEntry=Trc_AVL_doubleRotate_Entry Noenv Overhead=1 Level=3 Template="doubleRotate(tree=%p, walk=%p, direction=%zi, heightChange=%p)"
TraceExit=Trc_AVL_doubleRotate_Exit Noenv Overhead=1 Level=3 Template="doubleRotate -- newRootNode=%p"

TraceEntry=Trc_AVL_rebalance_Entry Noenv Overhead=1 Level=3 Template="rebalance(tree=%p, walkPtr=%p, walkSRPPtr=%p, direction=%zi, heightChange=%p)"
TraceExit=Trc_AVL_rebalance_Exit Noenv Overhead=1 Level=3 Template="rebalance - heightChange=%zi"

TraceEntry=Trc_AVL_insertNode_Entry Noenv Overhead=1 Level=3 Template="insertNode(tree=%p, walkPtr=%p, walkSRPPtr=%p, node=%p, heightChange=%p)"
TraceExit=Trc_AVL_insertNode_Trivial Noenv Overhead=1 Level=3 Template="insertNode -- inserted trivially: %p"
TraceExit=Trc_AVL_insertNode_Exists Noenv Overhead=1 Level=3 Template="insertNode -- node already exists: %p"
TraceExit=Trc_AVL_insertNode_Recursive Noenv Overhead=1 Level=3 Template="insertNode -- inserted recursively: %p"

TraceEntry=Trc_AVL_findNode_Entry Noenv Overhead=1 Level=3 Template="findNode(tree=%p, walk=%p, search=%zu)"
TraceExit=Trc_AVL_findNode_Exit Noenv Overhead=1 Level=3 Template="findNode -- result=%p"

TraceEntry=Trc_AVL_deleteNode_Entry Noenv Overhead=1 Level=3 Template="deleteNode(tree=%p, walkPtr=%p, walkSRPPtr=%p, node=%p, heightChange=%p)"
TraceExit=Trc_AVL_deleteNode_NotInTree Noenv Overhead=1 Level=3 Template="deleteNode -- node is not in this tree"
TraceExit=Trc_AVL_deleteNode_Removed Noenv Overhead=1 Level=3 Template="deleteNode -- node removed: %p"
TraceExit=Trc_AVL_deleteNode_Recursive Noenv Overhead=1 Level=3 Template="deleteNode -- deleted recursively: %p"

TraceAssert=Assert_AVL_true NoEnv Overhead=1 Level=1 Assert="(P1)"
TraceAssert=Assert_AVL_false NoEnv Overhead=1 Level=1 Assert="!(P1)"
