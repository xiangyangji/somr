/*
 *  Do not edit this file 
 *  Generated by TraceGen
 */
#ifndef UTE_J9UTILCORE_MODULE_HEADER
#define UTE_J9UTILCORE_MODULE_HEADER
#include "ute_module.h"
#if !defined(UT_DIRECT_TRACE_REGISTRATION)
#include "jni.h"
#endif /* !defined(UT_DIRECT_TRACE_REGISTRATION) */
#ifndef UT_TRACE_OVERHEAD
#define UT_TRACE_OVERHEAD 1
#endif
#ifndef UT_THREAD
#define UT_THREAD(thr) (void *)thr
#endif /* UT_THREAD */
#ifndef UT_STR
#define UT_STR(arg) #arg
#endif
#ifdef __cplusplus
extern "C" {
#endif

#ifdef __clang__
#include <unistd.h>
#define Trace_Unreachable() _exit(-1)
#else
#define Trace_Unreachable()
#endif

#if defined(UT_DIRECT_TRACE_REGISTRATION)
int32_t registerj9utilcoreWithTrace(UtInterface * utIntf, UtModuleInfo* containerName);
int32_t deregisterj9utilcoreWithTrace(UtInterface * utIntf);
#define UT_MODULE_LOADED(utIntf) registerj9utilcoreWithTrace((utIntf), NULL);
#define UT_MODULE_UNLOADED(utIntf) deregisterj9utilcoreWithTrace((utIntf));
#define UT_J9UTILCORE_MODULE_LOADED(utIntf) registerj9utilcoreWithTrace((utIntf), NULL);
#define UT_J9UTILCORE_MODULE_UNLOADED(utIntf) deregisterj9utilcoreWithTrace((utIntf));
#else /* defined(UT_DIRECT_TRACE_REGISTRATION) */
int32_t registerj9utilcoreWithTrace(JavaVM * vm, UtModuleInfo* containerName);
int32_t deregisterj9utilcoreWithTrace(JavaVM * vm);
#define UT_MODULE_LOADED(vm) registerj9utilcoreWithTrace((JavaVM *)(vm), NULL);
#define UT_MODULE_UNLOADED(vm) deregisterj9utilcoreWithTrace((JavaVM *)(vm));
#define UT_J9UTILCORE_MODULE_LOADED(vm) registerj9utilcoreWithTrace((JavaVM *)(vm), NULL);
#define UT_J9UTILCORE_MODULE_UNLOADED(vm) deregisterj9utilcoreWithTrace((JavaVM *)(vm));
#endif /* defined(UT_DIRECT_TRACE_REGISTRATION) */

#if UT_TRACE_OVERHEAD >= 1
#define Trc_Utilcore_decodeUTF8CharN_EmbdeddedNul() do { /* tracepoint name: j9utilcore.0 */ \
	if ((unsigned char) j9utilcore_UtActive[0] != 0){ \
		j9utilcore_UtModuleInfo.intf->Trace((void *)NULL, &j9utilcore_UtModuleInfo, ((0u << 8) | j9utilcore_UtActive[0]), NULL);} \
	} while(0)
#else
#define Trc_Utilcore_decodeUTF8CharN_EmbdeddedNul()   /* tracepoint name: j9utilcore.0 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_Utilcore_decodeUTF8CharN_Truncated() do { /* tracepoint name: j9utilcore.1 */ \
	if ((unsigned char) j9utilcore_UtActive[1] != 0){ \
		j9utilcore_UtModuleInfo.intf->Trace((void *)NULL, &j9utilcore_UtModuleInfo, ((1u << 8) | j9utilcore_UtActive[1]), NULL);} \
	} while(0)
#else
#define Trc_Utilcore_decodeUTF8CharN_Truncated()   /* tracepoint name: j9utilcore.1 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_Utilcore_decodeUTF8CharN_Invalid2ByteEncoding(P1) do { /* tracepoint name: j9utilcore.2 */ \
	if ((unsigned char) j9utilcore_UtActive[2] != 0){ \
		j9utilcore_UtModuleInfo.intf->Trace((void *)NULL, &j9utilcore_UtModuleInfo, ((2u << 8) | j9utilcore_UtActive[2]), "\4", P1);} \
	} while(0)
#else
#define Trc_Utilcore_decodeUTF8CharN_Invalid2ByteEncoding(P1)   /* tracepoint name: j9utilcore.2 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_Utilcore_decodeUTF8CharN_Invalid3ByteEncoding(P1) do { /* tracepoint name: j9utilcore.3 */ \
	if ((unsigned char) j9utilcore_UtActive[3] != 0){ \
		j9utilcore_UtModuleInfo.intf->Trace((void *)NULL, &j9utilcore_UtModuleInfo, ((3u << 8) | j9utilcore_UtActive[3]), "\4", P1);} \
	} while(0)
#else
#define Trc_Utilcore_decodeUTF8CharN_Invalid3ByteEncoding(P1)   /* tracepoint name: j9utilcore.3 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_Utilcore_decodeUTF8CharN_EncodingTooLarge(P1) do { /* tracepoint name: j9utilcore.4 */ \
	if ((unsigned char) j9utilcore_UtActive[4] != 0){ \
		j9utilcore_UtModuleInfo.intf->Trace((void *)NULL, &j9utilcore_UtModuleInfo, ((4u << 8) | j9utilcore_UtActive[4]), "\4", P1);} \
	} while(0)
#else
#define Trc_Utilcore_decodeUTF8CharN_EncodingTooLarge(P1)   /* tracepoint name: j9utilcore.4 */
#endif

extern UtModuleInfo j9utilcore_UtModuleInfo;
extern unsigned char j9utilcore_UtActive[];

#ifndef UT_MODULE_INFO
#define UT_MODULE_INFO j9utilcore_UtModuleInfo
#endif /* UT_MODULE_INFO */

#ifndef UT_ACTIVE
#define UT_ACTIVE j9utilcore_UtActive
#endif /* UT_ACTIVE */

#ifdef __cplusplus
} /* extern "C" */
#endif
#endif /* UTE_J9UTILCORE_MODULE_HEADER */
/*
 * End of file
 */
